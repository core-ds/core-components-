"use strict";(self.webpackChunk_alfalab_core_components=self.webpackChunk_alfalab_core_components||[]).push([[5907,1341],{"./node_modules/@mdx-js/react/index.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MDXContext:function(){return MDXContext},MDXProvider:function(){return MDXProvider},useMDXComponents:function(){return useMDXComponents},withMDXComponents:function(){return withMDXComponents}});var react=__webpack_require__("./node_modules/react/index.js");let MDXContext=react.createContext({});function withMDXComponents(Component){return boundMDXComponent;function boundMDXComponent(props){let allComponents=useMDXComponents(props.components);return react.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){let contextComponents=react.useContext(MDXContext);return react.useMemo(()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components},[contextComponents,components])}let emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{r:function(){return DocsRenderer}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/react-dom-shim/dist/react-18.mjs"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),defaultComponents={code:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.bD,a:_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ct,..._storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.lO},ErrorBoundary=class extends react__WEBPACK_IMPORTED_MODULE_0__.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(err){let{showException}=this.props;showException(err)}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,children)}},DocsRenderer=class{constructor(){this.render=async(context,docsParameter,element)=>{let components={...defaultComponents,...docsParameter?.components},TDocs=_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.WI;return new Promise((resolve,reject)=>{__webpack_require__.e(1341).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@mdx-js/react/index.js")).then(({MDXProvider})=>(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.l)(react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorBoundary,{showException:reject,key:Math.random()},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXProvider,{components},react__WEBPACK_IMPORTED_MODULE_0__.createElement(TDocs,{context,docsParameter}))),element)).then(()=>resolve())})},this.unmount=element=>{(0,_storybook_react_dom_shim__WEBPACK_IMPORTED_MODULE_2__.K)(element)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{$4:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.$4},Ed:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ed},UG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.UG},h_:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_},oG:function(){return _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG}}),__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js":function(module,__unused_webpack_exports,__webpack_require__){var mod,secondTarget,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))__hasOwnProp.call(to,key)||key===except||__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},mdx_react_shim_exports={};module.exports=__copyProps(__defProp({},"__esModule",{value:!0}),mdx_react_shim_exports),mod=__webpack_require__("./node_modules/@mdx-js/react/index.js"),secondTarget=module.exports,__copyProps(mdx_react_shim_exports,mod,"default"),secondTarget&&__copyProps(secondTarget,mod,"default")},"./packages/universal-modal/src/docs/Component.stories.mdx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Content:function(){return Content},SidePanelComponent:function(){return SidePanelComponent},Text:function(){return Text},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Component_stories},universalModal:function(){return universalModal}});var react=__webpack_require__("./node_modules/react/index.js"),mdx_react_shim=__webpack_require__("./node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),addon_knobs_dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),blocks=__webpack_require__("./.storybook/blocks/index.ts"),modern=__webpack_require__("./dist/button/modern/index.js"),desktop=__webpack_require__("./dist/button/modern/desktop/index.js"),mobile=__webpack_require__("./dist/button/modern/mobile/index.js"),modern_mobile=__webpack_require__("./dist/universal-modal/modern/mobile/index.js"),modern_desktop=__webpack_require__("./dist/universal-modal/modern/desktop/index.js"),Component_responsive=__webpack_require__("./dist/universal-modal/modern/Component.responsive.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){let _components=Object.assign({h2:"h2",p:"p",pre:"pre",code:"code"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"анатомия",children:"Анатомия"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Modal построен как Compound Components. Состоит из компонентов Header, Content и Footer, содержащих в себе кастомизируемые слоты."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,mobileHeight:500,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [open, setOpen] = React.useState(false);\n\n    const dashedBackground = {\n        boxSizing: 'border-box',\n        border: '1px dashed #2288FA',\n        backgroundColor: '#D8EAFF',\n        borderRadius: 8,\n    };\n\n    const headerAnatomyStyles = {\n        padding: '20px 20px 0',\n        display: 'flex',\n        addonStyles: {\n            width: 48,\n            height: 48,\n            ...dashedBackground,\n        },\n        titleStyles: {\n            flexGrow: 1,\n            height: 48,\n            ...dashedBackground,\n        },\n    };\n\n    const contentAnatomyStyles = {\n        padding: '0 32px',\n        height: 336,\n        content: {\n            height: '100%',\n            ...dashedBackground,\n        },\n    };\n\n    const footerAnatomyStyles = {\n        boxSizing: 'border-box',\n        padding: '16px 32px 32px',\n        footer: {\n            height: 48,\n            ...dashedBackground,\n        },\n    };\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать анатомию</Button>\n            <UniversalModalResponsive\n                open={open}\n                width={500}\n                height={500}\n                onClose={() => setOpen(false)}\n            >\n                <div style={{ ...headerAnatomyStyles }}>\n                    <div style={{ ...headerAnatomyStyles.addonStyles }} />\n                    <div style={{ ...headerAnatomyStyles.titleStyles }} />\n                    <div style={{ ...headerAnatomyStyles.addonStyles }} />\n                </div>\n                <div style={{ ...contentAnatomyStyles }}>\n                    <div style={{ ...contentAnatomyStyles.content }}></div>\n                </div>\n                <div style={{ ...footerAnatomyStyles }}>\n                    <div style={{ ...footerAnatomyStyles.footer }}></div>\n                </div>\n            </UniversalModalResponsive>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"примеры-наполнения",children:"Примеры наполнения"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"В десктопных модалках в зависимости от положения и размера меняется стиль заголовка в хедере и размер кнопок в футере."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,mobileHeight:640,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [open, setOpen] = React.useState(false);\n    const [horizontalAlign, setHorizontalAlign] = React.useState('center');\n    const [verticalAlign, setVerticalAlign] = React.useState('center');\n    const [modalWidth, setModalWidth] = React.useState('500');\n    const [modalHeight, setModalHeight] = React.useState('500');\n\n    const horizontalOptions = [\n        { key: 'start', content: 'Start' },\n        { key: 'center', content: 'Center' },\n        { key: 'end', content: 'End' },\n    ];\n    const verticalOptions = [\n        { key: 'top', content: 'Top' },\n        { key: 'center', content: 'Center' },\n        { key: 'bottom', content: 'Bottom' },\n    ];\n\n    const heightOptions = [\n        { key: '500', content: '500' },\n        { key: '600', content: '600' },\n        { key: '800', content: '800' },\n        { key: 'fullHeight', content: 'Full' },\n    ];\n\n    const widthOptions = [\n        { key: '500', content: '500' },\n        { key: '600', content: '600' },\n        { key: '800', content: '800' },\n        { key: 'fullWidth', content: 'Full' },\n    ];\n\n    const [headerButtonCross, setHeaderButtonCross] = React.useState(true);\n    const [headerButtonArrow, setHeaderButtonArrow] = React.useState(false);\n    const [headerTitle, setHeaderTitle] = React.useState(true);\n\n    const [mainFooterButton, setMainFooterButton] = React.useState(true);\n    const [additionalFooterButton, setAdditionalFooterButton] = React.useState(false);\n    const [verticalFooterButtons, setVerticalFooterButtons] = React.useState(false);\n    const [stretchFooterButtons, setStretchFooterButtons] = React.useState(false);\n\n    const [contentTitle, setContentTitle] = React.useState(false);\n    const [contentButton, setContentButton] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <Gap size={20} />\n            <Divider />\n            <Gap size={20} />\n            <div style={{ display: 'flex', flexDirection: 'column', width: 532 }}>\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={horizontalOptions}\n                            selected={horizontalAlign}\n                            label='Положение по горизонтали'\n                            block={true}\n                            onChange={({ selected }) => setHorizontalAlign(selected.key)}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={verticalOptions}\n                            selected={verticalAlign}\n                            label='Положение по вертикали'\n                            block={true}\n                            onChange={({ selected }) => setVerticalAlign(selected.key)}\n                        />\n                    </div>\n                </div>\n                <Gap size={12} />\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={heightOptions}\n                            selected={modalHeight}\n                            label='Высота'\n                            block={true}\n                            onChange={({ selected }) => setModalHeight(selected.key)}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={widthOptions}\n                            selected={modalWidth}\n                            label='Ширина'\n                            block={true}\n                            onChange={({ selected }) => setModalWidth(selected.key)}\n                        />\n                    </div>\n                </div>\n            </div>\n            <Gap size={24} />\n            Настройки шапки\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Крестик'\n                    checked={headerButtonCross}\n                    onChange={() => setHeaderButtonCross((prev) => !prev)}\n                />\n                <Gap size={12} />\n\n                <Switch\n                    label='Стрелка назад'\n                    checked={headerButtonArrow}\n                    onChange={() => setHeaderButtonArrow((prev) => !prev)}\n                />\n                <Gap size={12} />\n\n                <Switch\n                    label='Заголовок'\n                    checked={headerTitle}\n                    onChange={() => {\n                        setContentTitle(false);\n                        setHeaderTitle((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n            </div>\n            <Gap size={24} />\n            Настройки футера\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Основная кнопка'\n                    checked={mainFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setMainFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Дополнительная кнопка'\n                    checked={additionalFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setAdditionalFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Вериткальная ориентация'\n                    checked={verticalFooterButtons}\n                    onChange={() => setVerticalFooterButtons((prev) => !prev)}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Растянуть кнопки на всю ширину'\n                    hint='Только для горизонтального расположения'\n                    checked={stretchFooterButtons}\n                    onChange={() => setStretchFooterButtons((prev) => !prev)}\n                />\n            </div>\n            <Gap size={24} />\n            Настройки контента\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Загловок'\n                    hint='Если не стали размещать его в шапке'\n                    checked={contentTitle}\n                    onChange={() => {\n                        setHeaderTitle(false);\n                        setContentTitle((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Кнопка'\n                    hint='Если не стали размещать его в футере'\n                    checked={contentButton}\n                    onChange={() => {\n                        setMainFooterButton(false);\n                        setAdditionalFooterButton(false);\n                        setContentButton((prev) => !prev);\n                    }}\n                />\n            </div>\n            <UniversalModalDesktop\n                open={open}\n                width={modalWidth}\n                height={modalHeight}\n                horizontalAlign={horizontalAlign}\n                verticalAlign={verticalAlign}\n                onClose={() => setOpen(false)}\n            >\n                <UniversalModalDesktop.Header\n                    align='left'\n                    sticky={true}\n                    {...(headerButtonArrow && {\n                        leftAddons: (\n                            <ActionIconAddon action='back' onClick={() => setOpen(false)} />\n                        ),\n                        align: 'center',\n                    })}\n                    {...(headerTitle && {\n                        title: 'Почему банк проверяет мои операции?',\n                    })}\n                    {...(headerButtonCross && {\n                        rightAddons: (\n                            <ActionIconAddon action='close' onClick={() => setOpen(false)} />\n                        ),\n                    })}\n                ></UniversalModalDesktop.Header>\n                <UniversalModalDesktop.Content>\n                    {contentTitle && (\n                        <Typography.Title view='medium' font='system'>\n                            Почему банк проверяет мои операции?\n                        </Typography.Title>\n                    )}\n\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                    {contentButton && <Button size={48}>Кнопка</Button>}\n                </UniversalModalDesktop.Content>\n                {(mainFooterButton || additionalFooterButton) && (\n                    <UniversalModalDesktop.Footer\n                        sticky={true}\n                        layout={verticalFooterButtons ? 'column' : 'start'}\n                    >\n                        {mainFooterButton && (\n                            <Button size={48} view='primary' block={stretchFooterButtons}>\n                                Primary\n                            </Button>\n                        )}\n\n                        {additionalFooterButton && (\n                            <Button size={48} view='secondary' block={stretchFooterButtons}>\n                                Secondary\n                            </Button>\n                        )}\n                    </UniversalModalDesktop.Footer>\n                )}\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n\n//MOBILE\nrender(() => {\n    const [open, setOpen] = React.useState(false);\n\n    const [headerButtonCross, setHeaderButtonCross] = React.useState(true);\n    const [headerButtonArrow, setHeaderButtonArrow] = React.useState(false);\n    const [headerTitle, setHeaderTitle] = React.useState(true);\n\n    const [mainFooterButton, setMainFooterButton] = React.useState(true);\n    const [additionalFooterButton, setAdditionalFooterButton] = React.useState(false);\n    const [verticalFooterButtons, setVerticalFooterButtons] = React.useState(false);\n    const [stretchFooterButtons, setStretchFooterButtons] = React.useState(false);\n\n    const [contentTitle, setContentTitle] = React.useState(false);\n    const [contentButton, setContentButton] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <Gap size={20} />\n            <Divider />\n            <Gap size={20} />\n            Настройки шапки\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Крестик'\n                    checked={headerButtonCross}\n                    onChange={() => setHeaderButtonCross((prev) => !prev)}\n                />\n                <Gap size={12} />\n\n                <Switch\n                    label='Стрелка назад'\n                    checked={headerButtonArrow}\n                    onChange={() => setHeaderButtonArrow((prev) => !prev)}\n                />\n                <Gap size={12} />\n\n                <Switch\n                    label='Заголовок'\n                    checked={headerTitle}\n                    onChange={() => {\n                        setContentTitle(false);\n                        setHeaderTitle((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n            </div>\n            <Gap size={24} />\n            Настройки футера\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Основная кнопка'\n                    checked={mainFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setMainFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Дополнительная кнопка'\n                    checked={additionalFooterButton}\n                    onChange={() => {\n                        setContentButton(false);\n                        setAdditionalFooterButton((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Вериткальная ориентация'\n                    checked={verticalFooterButtons}\n                    onChange={() => setVerticalFooterButtons((prev) => !prev)}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Растянуть кнопки на всю ширину'\n                    hint='Только для горизонтального расположения'\n                    checked={stretchFooterButtons}\n                    onChange={() => setStretchFooterButtons((prev) => !prev)}\n                />\n            </div>\n            <Gap size={24} />\n            Настройки контента\n            <Gap size={12} />\n            <div>\n                <Switch\n                    label='Загловок'\n                    hint='Если не стали размещать его в шапке'\n                    checked={contentTitle}\n                    onChange={() => {\n                        setHeaderTitle(false);\n                        setContentTitle((prev) => !prev);\n                    }}\n                />\n                <Gap size={12} />\n                <Switch\n                    label='Кнопка'\n                    hint='Если не стали размещать его в футере'\n                    checked={contentButton}\n                    onChange={() => {\n                        setMainFooterButton(false);\n                        setAdditionalFooterButton(false);\n                        setContentButton((prev) => !prev);\n                    }}\n                />\n            </div>\n            <UniversalModalMobile open={open} onClose={() => setOpen(false)}>\n                <UniversalModalMobile.Header\n                    align='left'\n                    sticky={true}\n                    {...(headerButtonArrow && {\n                        leftAddons: (\n                            <ActionIconAddon action='back' onClick={() => setOpen(false)} />\n                        ),\n                        align: 'center',\n                    })}\n                    {...(headerTitle && {\n                        title: 'Почему банк проверяет мои операции?',\n                    })}\n                    {...(headerButtonCross && {\n                        rightAddons: (\n                            <ActionIconAddon action='close' onClick={() => setOpen(false)} />\n                        ),\n                    })}\n                ></UniversalModalMobile.Header>\n                <UniversalModalMobile.Content>\n                    {contentTitle && (\n                        <Typography.Title view='medium' font='system'>\n                            Почему банк проверяет мои операции?\n                        </Typography.Title>\n                    )}\n\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                    {contentButton && <Button size={48}>Кнопка</Button>}\n                </UniversalModalMobile.Content>\n                {(mainFooterButton || additionalFooterButton) && (\n                    <UniversalModalMobile.Footer\n                        sticky={true}\n                        layout={verticalFooterButtons ? 'column' : 'start'}\n                    >\n                        {mainFooterButton && (\n                            <Button size={48} view='primary' block={stretchFooterButtons}>\n                                Primary\n                            </Button>\n                        )}\n\n                        {additionalFooterButton && (\n                            <Button size={48} view='secondary' block={stretchFooterButtons}>\n                                Secondary\n                            </Button>\n                        )}\n                    </UniversalModalMobile.Footer>\n                )}\n            </UniversalModalMobile>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"изменение-отступов",children:"Изменение отступов"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Для того чтобы корректно расположить модалку вблизи края экрана можно воспользоваться изменяемыми отступами."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,desktopOnly:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [open, setOpen] = React.useState(false);\n    const [leftMargin, setLeftMargin] = React.useState('12');\n    const [rightMargin, setRightMargin] = React.useState('12');\n    const [topMargin, setTopMargin] = React.useState('12');\n    const [bottomMargin, setBottomMargin] = React.useState('12');\n\n    const margins = [\n        { key: '0', content: '0' },\n        { key: '2', content: '2' },\n        { key: '4', content: '4' },\n        { key: '8', content: '8' },\n        { key: '12', content: '12' },\n        { key: '16', content: '16' },\n        { key: '20', content: '20' },\n        { key: '24', content: '24' },\n        { key: '32', content: '32' },\n        { key: '40', content: '40' },\n        { key: '48', content: '48' },\n        { key: '56', content: '56' },\n        { key: '64', content: '64' },\n        { key: '72', content: '72' },\n        { key: '80', content: '80' },\n        { key: '96', content: '96' },\n        { key: '128', content: '128' },\n    ];\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <Gap size={20} />\n            <Divider />\n            <Gap size={20} />\n            <div style={{ display: 'flex', flexDirection: 'column', width: 532 }}>\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={leftMargin}\n                            label='Левый'\n                            block={true}\n                            onChange={({ selected }) => setLeftMargin(selected.key)}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={rightMargin}\n                            label='Правый'\n                            block={true}\n                            onChange={({ selected }) => setRightMargin(selected.key)}\n                        />\n                    </div>\n                </div>\n                <Gap size={12} />\n                <div style={{ display: 'flex' }}>\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={topMargin}\n                            label='Верхний'\n                            block={true}\n                            onChange={({ selected }) => setTopMargin(selected.key)}\n                        />\n                    </div>\n                    <Gap size={12} direction={'horizontal'} />\n                    <div style={{ width: 260 }}>\n                        <SelectDesktop\n                            size={56}\n                            options={margins}\n                            selected={bottomMargin}\n                            label='Нижний'\n                            block={true}\n                            onChange={({ selected }) => setBottomMargin(selected.key)}\n                        />\n                    </div>\n                </div>\n            </div>\n            <UniversalModalDesktop\n                open={open}\n                width={'500'}\n                height={'fullHeight'}\n                horizontalAlign={'end'}\n                verticalAlign={'center'}\n                margin={[topMargin, rightMargin, bottomMargin, leftMargin]}\n                onClose={() => setOpen(false)}\n            >\n                <UniversalModalDesktop.Header\n                    align='left'\n                    sticky={true}\n                    title='Почему банк проверяет мои операции?'\n                    rightAddons={<ActionIconAddon action='close' onClick={() => setOpen(false)} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button size={48} view='primary'>\n                        Primary\n                    </Button>\n                    <Button size={48} view='secondary'>\n                        Secondary\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"изменение-размеров",children:"Изменение размеров"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Размером десктопной модалки можно управлять через UI."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,desktopOnly:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [open, setOpen] = React.useState(false);\n    const [dialogWidth, setDialogWidth] = React.useState(0);\n    const dialogRef = React.useRef(null);\n\n    const [modalWidth, setModalWidth] = React.useState(500);\n\n    const handleIncrease = () => {\n        setModalWidth((prev) => prev + 200);\n    };\n\n    const handleDecrease = () => {\n        setModalWidth((prev) => prev - 200);\n    };\n\n    React.useEffect(() => {\n        if (!dialogRef.current) {\n            dialogRef.current = document.querySelector('div[role=\"dialog\"]');\n        }\n        if (dialogRef.current) {\n            setDialogWidth(dialogRef.current.clientWidth);\n        }\n    });\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <UniversalModalDesktop\n                open={open}\n                width={modalWidth}\n                height={'fullHeight'}\n                horizontalAlign={'end'}\n                verticalAlign={'center'}\n                onClose={() => setOpen(false)}\n            >\n                <UniversalModalDesktop.Header\n                    align='left'\n                    sticky={true}\n                    title='Почему банк проверяет мои операции?'\n                    rightAddons={<ActionIconAddon action='close' onClick={() => setOpen(false)} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button\n                        size={48}\n                        view='primary'\n                        onClick={handleIncrease}\n                        disabled={modalWidth >= dialogWidth}\n                    >\n                        Увеличить\n                    </Button>\n                    <Button\n                        size={48}\n                        view='secondary'\n                        onClick={handleDecrease}\n                        disabled={modalWidth <= 500}\n                    >\n                        Уменьшить\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"оверлей",children:"Оверлей"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Чтобы дать доступ одновременно к модальному и немодальному слою можно отключить оверлей у десктопной версии модалки."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{live:!0,desktopOnly:!0,children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"render(() => {\n    const [open, setOpen] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => setOpen((prev) => !prev)}>Показать модалку</Button>\n            <UniversalModalDesktop\n                open={open}\n                width={'500'}\n                height={'fullHeight'}\n                horizontalAlign={'end'}\n                verticalAlign={'center'}\n                overlay={false}\n                onClose={() => setOpen(false)}\n            >\n                <UniversalModalDesktop.Header\n                    align='left'\n                    sticky={true}\n                    title='Почему банк проверяет мои операции?'\n                    rightAddons={<ActionIconAddon action='close' onClick={() => setOpen(false)} />}\n                />\n                <UniversalModalDesktop.Content>\n                    <Typography.Text tag='p'>\n                        В 2001 году в России начал действовать Федеральный закон №115 \xabО\n                        противодействии легализации доходов, полученных преступным путём, и\n                        финансированию терроризма\xbb. В рамках закона банки могут блокировать карты,\n                        отказывать в проведении сомнительных операций, ограничить доступ в\n                        интернет-банк или запрашивать документы, если по операции клиента возникли\n                        подозрения.\n                    </Typography.Text>\n                    <br />\n                    <Typography.Text tag='p'>\n                        Требования 115-ФЗ и связанных с ним документов Банка России часто меняются,\n                        предприниматели не всегда успевают за ними следить. Последствия нарушений\n                        \xabантиотмывочного\xbb законодательства всегда неприятны: приходится остановить\n                        бизнес-процессы и доказать банку законность операций. Специалисты\n                        \xabАльфа-банка\xbb собрали понятные рекомендации, как сэкономить время на\n                        объяснения и предотвратить блокировки\n                    </Typography.Text>\n\n                    <Collapse collapsedLabel='Подробнее' expandedLabel='Скрыть'>\n                        <Typography.Text tag='p'>\n                            115-ФЗ Касается всех предпринимателей, фирм и физлиц, а также тех, кто\n                            пользуется банковским счётом для бизнеса, крупных денежных переводов или\n                            личных расчётов. Ограничения интернет-банка, блокировка карт\n                            добросовестных компаний могут произойти из-за неправильно оформленных\n                            документов, ошибок в платёжке или попыток снизить налоги.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Клиенты воспринимают ограничения как атаку со стороны банка, но чаще\n                            всего сами допускают ошибки или нарушения, которых можно избежать. Банки\n                            не преследуют цели доставить неудобства клиентам — они обязаны соблюдать\n                            законодательство и следовать инструкциям и рекомендациям ЦБ, а в\n                            противном случае рискуют лишиться лицензии.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Обналичивание — сомнительные операции, когда юрлицо или предприниматель\n                            снимает со счёта более 80% от оборота или переводит деньги на счета\n                            физлиц, которые затем снимают в наличной форме.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Вывод капитала за границу — это переводы нерезидентам по договорам об\n                            импорте работ/услуг и результатов интеллектуальной деятельности, по\n                            которым проведение расчётов осуществляется без одновременной уплаты НДС;\n                            по сделкам купли-продажи ценных бумаг, а также товаров, которые не\n                            пересекают границу России.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Транзитные операции — операции, в процессе которых деньги поступают на\n                            счёт компании от других резидентов и списываются в короткие сроки. При\n                            этом, как правило, в этих случаях по счёту нет начислений зарплат,\n                            уплаты налогов, и они не соответствуют заявленному компанией виду\n                            деятельности.\n                        </Typography.Text>\n                        <br />\n                        <Typography.Text tag='p'>\n                            Запрашивать могут любые документы и устанавливать разные сроки их\n                            предоставления — это зависит от службы контроля конкретного банка.\n                            Обычно банки запрашивают чеки, счета или договора с контрагентами. В\n                            некоторых случаях бывает достаточно устных объяснений. Для проверки\n                            информации и пересмотра уровня риска банк может пригласить клиента в\n                            банк для устного разъяснения или выехать по месту ведения бизнеса\n                            клиента.\n                        </Typography.Text>\n                    </Collapse>\n                </UniversalModalDesktop.Content>\n                <UniversalModalDesktop.Footer sticky={true} layout='start'>\n                    <Button size={48} view='primary'>\n                        Primary\n                    </Button>\n                    <Button size={48} view='secondary'>\n                        Secondary\n                    </Button>\n                </UniversalModalDesktop.Footer>\n            </UniversalModalDesktop>\n        </React.Fragment>\n    );\n});\n"})})]})}var description=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)},src_mobile=__webpack_require__("./packages/universal-modal/src/mobile/index.ts"),src_desktop=__webpack_require__("./packages/universal-modal/src/desktop/index.ts"),src=__webpack_require__("./packages/universal-modal/src/index.ts");function development_createMdxContent(props){let _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(_components.h2,{id:"подключение",children:"Подключение"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"import { UniversalModalResponsive } from '@alfalab/core-components/universal-modal';\nimport { UniversalModalDesktop } from '@alfalab/core-components/universal-modal/desktop';\nimport { UniversalModalMobile } from '@alfalab/core-components/universal-modal/mobile';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Из индекса импортируется responsive версия компонента."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"использование-datatestid",children:"Использование dataTestId"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["В компоненте используются модификаторы для ",(0,jsx_runtime.jsx)(_components.code,{children:"dataTestId"}),".\nДля удобного поиска элементов можно воспользоваться функцией ",(0,jsx_runtime.jsx)(_components.code,{children:"getSidePanelTestIds"}),".\nИмпорт из ",(0,jsx_runtime.jsx)(_components.code,{children:"@alfalab/core-components/side-panel/shared"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Функция возвращает объект:"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:"{\n        modal: dataTestId,\n        content: `${dataTestId}-content`,\n        footer: `${dataTestId}-footer`,\n        controls: `${dataTestId}-controls`,\n        header: `${dataTestId}-header`,\n        title: `${dataTestId}-header-title`,\n        closer: `${dataTestId}-header-closer`,\n        backButton: `${dataTestId}-header-back-button`,\n};\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"свойства",children:"Свойства"}),"\n",(0,jsx_runtime.jsx)(blocks.Ft,{components:{UniversalModalDesktop:src_desktop.UniversalModalDesktop,UniversalModalMobile:src_mobile.UniversalModalMobile,UniversalModalResponsive:src.UniversalModalResponsive,"UniversalModalResponsive.Header":src.UniversalModalResponsive.Header,"UniversalModalResponsive.Controls":src.UniversalModalResponsive.Controls,"UniversalModalDesktop.Content":src_desktop.UniversalModalDesktop.Content,"UniversalModalDesktop.Header":src_desktop.UniversalModalDesktop.Header,"UniversalModalDesktop.Footer":src_desktop.UniversalModalDesktop.Footer,"UniversalModalDesktop.Controls":src_desktop.UniversalModalDesktop.Controls,"UniversalModalMobile.Content":src_mobile.UniversalModalMobile.Content,"UniversalModalMobile.Header":src_mobile.UniversalModalMobile.Header,"UniversalModalMobile.Footer":src_mobile.UniversalModalMobile.Footer,"UniversalModalMobile.Controls":src_mobile.UniversalModalMobile.Controls}}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"переменные",children:"Переменные"}),"\n",(0,jsx_runtime.jsx)(blocks.ZV,{css:"@import '../../vars/src/index.css';\n\n:root {\n    --side-panel-border-radius: var(--border-radius-12);\n    --side-panel-vertical-padding: var(--gap-40);\n    --side-panel-header-background: var(--color-light-modal-bg-primary);\n    --side-panel-footer-background: var(--color-light-modal-bg-primary);\n    --side-panel-footer-default-gap: var(--gap-16);\n\n    /* sizes */\n    --side-panel-s-width: 500px;\n\n    /* paddings */\n    --side-panel-s-header-paddings: 28px 28px var(--gap-0);\n    --side-panel-s-content-paddings: var(--gap-40) var(--gap-40) var(--gap-0);\n    --side-panel-s-footer-paddings: var(--gap-24) var(--gap-40) var(--gap-40);\n\n    /* scroll */\n    --side-panel-header-highlight-background: var(--color-light-modal-bg-primary);\n    --side-panel-footer-highlight-background: var(--color-light-modal-bg-primary);\n    --side-panel-header-highlight-box-shadow: 0 1px 0 0 var(--color-light-neutral-300);\n    --side-panel-footer-highlight-box-shadow: 0 -1px 0 0 var(--color-light-neutral-300);\n\n    /* desktop */\n    --side-panel-s-header-desktop-content-paddings: 6px var(--gap-12) var(--gap-16);\n    --side-panel-s-header-desktop-font-size: 30px;\n    --side-panel-s-header-desktop-line-height: 36px;\n    --side-panel-header-desktop-font-weight: bold;\n    --side-panel-header-desktop-font-family: var(--font-family-system);\n\n    /* mobile */\n    --side-panel-header-mobile-content-paddings: 10px var(--gap-8);\n    --side-panel-header-mobile-font-size: 20px;\n    --side-panel-header-mobile-line-height: 28px;\n    --side-panel-header-mobile-font-family: var(--font-family-system);\n    --side-panel-header-mobile-font-weight: 600;\n\n    /* paddings */\n    --side-panel-header-mobile-paddings: var(--gap-4) var(--gap-8);\n}\n"})]})}var development=function(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(development_createMdxContent,props)})):development_createMdxContent(props)},utils=__webpack_require__("./packages/screenshot-utils/screenshots-story/utils.ts");let Text=()=>{let _components=Object.assign({p:"p"},(0,mdx_react_shim.useMDXComponents)());return(0,jsx_runtime.jsx)(_components.p,{style:{margin:"0 0 16px"},children:"Сейчас много говорят об отказах банков в проведении операций, блокировках интернет-банка. Это связано с тем, что Центральный банк РФ обязывает банки выявлять операции своих клиентов, потенциально нарушающие требования Федерального закона \xabО противодействии легализации (отмыванию) доходов, полученных преступным путем, и финансированию терроризма\xbb — 115-ФЗ"})},Content=({isPreview})=>{let[showMore,setShowMore]=react.useState(!1);return isPreview?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:"Пример текстового контента."}):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Text,{}),(showMore||(0,addon_knobs_dist.boolean)("showMore"))&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Text,{}),(0,jsx_runtime.jsx)(Text,{}),(0,jsx_runtime.jsx)(Text,{}),(0,jsx_runtime.jsx)(Text,{}),(0,jsx_runtime.jsx)(Text,{})]}),(0,jsx_runtime.jsx)(modern.Button,{size:"xs",type:"Button",onClick:()=>setShowMore(!showMore),children:showMore?"Скрыть":"Показать еще"})]})},SidePanelComponent=modern_desktop.UniversalModalDesktop;function Component_stories_createMdxContent(props){let _components=Object.assign({div:"div"},(0,mdx_react_shim.useMDXComponents)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Components/UniversalModal",id:"UniversalModal"}),"\n","\n","\n","\n",(0,jsx_runtime.jsx)(dist.oG,{name:"UniversalModal",children:react.createElement(()=>{let[open,setOpen]=react.useState(!1),handleModalOpen=()=>setOpen(!open),component=(0,addon_knobs_dist.select)("SidePanelComponent",["UniversalModalResponsive","UniversalModalDesktop","UniversalModalMobile"],"UniversalModalDesktop"),horizontalAlign=(0,addon_knobs_dist.select)("horizontalAlign",["left","center","right"],"center"),verticalAlign=(0,addon_knobs_dist.select)("verticalAlign",["top","center","bottom"],"center"),width=(0,addon_knobs_dist.text)("width","500"),height=(0,addon_knobs_dist.text)("height","fullHeight"),overlay=(0,addon_knobs_dist.boolean)("overlay",!0),header=(0,addon_knobs_dist.boolean)("header",!0),headerTitle=(0,addon_knobs_dist.text)("header.title"),headerAlign=(0,addon_knobs_dist.select)("header.align",["left","center"],"left"),trim=(0,addon_knobs_dist.boolean)("header.trim",!0),stickyHeader=(0,addon_knobs_dist.boolean)("header.sticky",!1),stickyFooter=(0,addon_knobs_dist.boolean)("footer.sticky",!1),footerLayout=(0,addon_knobs_dist.select)("footer.layout",["start","center","space-between","column"],"start"),SidePanelComponent=react.useMemo(()=>({UniversalModalResponsive:Component_responsive._,UniversalModalDesktop:modern_desktop.UniversalModalDesktop,UniversalModalMobile:modern_mobile.UniversalModalMobile})[component],[component]),previewStyles=(0,utils.FX)((0,utils.Ph)("wrapperStyles")),isPreview=Object.keys(previewStyles).length>0,isMobile=SidePanelComponent===modern_mobile.UniversalModalMobile,FooterButton=isMobile?mobile.ButtonMobile:desktop.ButtonDesktop;return(0,jsx_runtime.jsxs)(_components.div,{style:{display:"inline-block",background:"transparent",...previewStyles},children:[!isPreview&&(0,jsx_runtime.jsx)(modern.Button,{type:"button",size:"xs",onClick:handleModalOpen,children:"Открыть сайд-панель"}),(0,jsx_runtime.jsxs)(SidePanelComponent,{open:open||(0,addon_knobs_dist.boolean)("open"),onClose:handleModalOpen,horizontalAlign:horizontalAlign,verticalAlign:verticalAlign,width:width,height:height,overlay:overlay,children:[header&&(0,jsx_runtime.jsx)(SidePanelComponent.Header,{sticky:stickyHeader,title:headerTitle,trim:trim,align:headerAlign}),(0,jsx_runtime.jsx)(SidePanelComponent.Content,{children:(0,jsx_runtime.jsx)(Content,{isPreview:isPreview})}),stickyFooter&&(0,jsx_runtime.jsx)(SidePanelComponent.Footer,{sticky:stickyFooter,children:(0,jsx_runtime.jsx)(SidePanelComponent.Controls,{layout:footerLayout,primary:(0,jsx_runtime.jsx)(FooterButton,{size:isMobile?"m":"s",view:"primary",children:isPreview?"Кнопка":"Сохранить"}),secondary:(0,jsx_runtime.jsx)(FooterButton,{size:isMobile?"m":"s",view:"secondary",children:isPreview?"Кнопка":"Отмена"})})})]})]})})}),"\n","\n",(0,jsx_runtime.jsx)(blocks.yt,{name:"UniversalModal",children:"Модальное окно. Используется для отображения контента в модальном слое."}),"\n",(0,jsx_runtime.jsx)(blocks.mQ,{description:(0,jsx_runtime.jsx)(description,{}),development:(0,jsx_runtime.jsx)(development,{}),changelog:(0,jsx_runtime.jsx)(dist.UG,{children:"# Change Log\n"})})]})}function Component_stories_MDXContent(props={}){let{wrapper:MDXLayout}=Object.assign({},(0,mdx_react_shim.useMDXComponents)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(Component_stories_createMdxContent,{...props})}):Component_stories_createMdxContent(props)}let universalModal=()=>react.createElement(()=>{let[open,setOpen]=react.useState(!1),handleModalOpen=()=>setOpen(!open),component=(0,addon_knobs_dist.select)("SidePanelComponent",["UniversalModalResponsive","UniversalModalDesktop","UniversalModalMobile"],"UniversalModalDesktop"),horizontalAlign=(0,addon_knobs_dist.select)("horizontalAlign",["left","center","right"],"center"),verticalAlign=(0,addon_knobs_dist.select)("verticalAlign",["top","center","bottom"],"center"),width=(0,addon_knobs_dist.text)("width","500"),height=(0,addon_knobs_dist.text)("height","fullHeight"),overlay=(0,addon_knobs_dist.boolean)("overlay",!0),header=(0,addon_knobs_dist.boolean)("header",!0),headerTitle=(0,addon_knobs_dist.text)("header.title"),headerAlign=(0,addon_knobs_dist.select)("header.align",["left","center"],"left"),trim=(0,addon_knobs_dist.boolean)("header.trim",!0),stickyHeader=(0,addon_knobs_dist.boolean)("header.sticky",!1),stickyFooter=(0,addon_knobs_dist.boolean)("footer.sticky",!1),footerLayout=(0,addon_knobs_dist.select)("footer.layout",["start","center","space-between","column"],"start"),SidePanelComponent=react.useMemo(()=>({UniversalModalResponsive:Component_responsive._,UniversalModalDesktop:modern_desktop.UniversalModalDesktop,UniversalModalMobile:modern_mobile.UniversalModalMobile})[component],[component]),previewStyles=(0,utils.FX)((0,utils.Ph)("wrapperStyles")),isPreview=Object.keys(previewStyles).length>0,isMobile=SidePanelComponent===modern_mobile.UniversalModalMobile,FooterButton=isMobile?mobile.ButtonMobile:desktop.ButtonDesktop;return(0,jsx_runtime.jsxs)("div",{style:{display:"inline-block",background:"transparent",...previewStyles},children:[!isPreview&&(0,jsx_runtime.jsx)(modern.Button,{type:"button",size:"xs",onClick:handleModalOpen,children:"Открыть сайд-панель"}),(0,jsx_runtime.jsxs)(SidePanelComponent,{open:open||(0,addon_knobs_dist.boolean)("open"),onClose:handleModalOpen,horizontalAlign:horizontalAlign,verticalAlign:verticalAlign,width:width,height:height,overlay:overlay,children:[header&&(0,jsx_runtime.jsx)(SidePanelComponent.Header,{sticky:stickyHeader,title:headerTitle,trim:trim,align:headerAlign}),(0,jsx_runtime.jsx)(SidePanelComponent.Content,{children:(0,jsx_runtime.jsx)(Content,{isPreview:isPreview})}),stickyFooter&&(0,jsx_runtime.jsx)(SidePanelComponent.Footer,{sticky:stickyFooter,children:(0,jsx_runtime.jsx)(SidePanelComponent.Controls,{layout:footerLayout,primary:(0,jsx_runtime.jsx)(FooterButton,{size:isMobile?"m":"s",view:"primary",children:isPreview?"Кнопка":"Сохранить"}),secondary:(0,jsx_runtime.jsx)(FooterButton,{size:isMobile?"m":"s",view:"secondary",children:isPreview?"Кнопка":"Отмена"})})})]})]})});universalModal.storyName="UniversalModal",universalModal.parameters={storySource:{source:'React.createElement(() => {\n  const [open, setOpen] = React.useState(false);\n  const handleModalOpen = () => setOpen(!open);\n  const component = select("SidePanelComponent", ["UniversalModalResponsive", "UniversalModalDesktop", "UniversalModalMobile"], "UniversalModalDesktop");\n  const horizontalAlign = select("horizontalAlign", ["left", "center", "right"], "center");\n  const verticalAlign = select("verticalAlign", ["top", "center", "bottom"], "center");\n  const width = text("width", "500");\n  const height = text("height", "fullHeight");\n  const overlay = boolean("overlay", true);\n  const header = boolean("header", true);\n  const headerTitle = text("header.title");\n  const headerAlign = select("header.align", ["left", "center"], "left");\n  const trim = boolean("header.trim", true);\n  const stickyHeader = boolean("header.sticky", false);\n  const stickyFooter = boolean("footer.sticky", false);\n  const footerLayout = select("footer.layout", ["start", "center", "space-between", "column"], "start");\n  const SidePanelComponent = React.useMemo(() => {\n    return {\n      UniversalModalResponsive: UniversalModalResponsive,\n      UniversalModalDesktop: UniversalModalDesktop,\n      UniversalModalMobile: UniversalModalMobile\n    }[component];\n  }, [component]);\n  const previewStyles = stylesStringToObj(getQueryParam("wrapperStyles"));\n  const isPreview = Object.keys(previewStyles).length > 0;\n  const isMobile = SidePanelComponent === UniversalModalMobile;\n  const FooterButton = isMobile ? ButtonMobile : ButtonDesktop;\n  return <div style={{\n    display: "inline-block",\n    background: "transparent",\n    ...previewStyles\n  }}>\n                {!isPreview && <Button type="button" size="xs" onClick={handleModalOpen}>\n                        Открыть сайд-панель\n                    </Button>}\n                <SidePanelComponent open={open || boolean("open")} onClose={handleModalOpen} horizontalAlign={horizontalAlign} verticalAlign={verticalAlign} width={width} height={height} overlay={overlay}>\n                    {header && <SidePanelComponent.Header sticky={stickyHeader} title={headerTitle} trim={trim} align={headerAlign} />}\n                    <SidePanelComponent.Content>\n                        <Content isPreview={isPreview} />\n                    </SidePanelComponent.Content>\n                    {stickyFooter && <SidePanelComponent.Footer sticky={stickyFooter}>\n                            <SidePanelComponent.Controls layout={footerLayout} primary={<FooterButton size={isMobile ? "m" : "s"} view="primary">\n                                        {isPreview ? "\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430" : "\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C"}\n                                    </FooterButton>} secondary={<FooterButton size={isMobile ? "m" : "s"} view="secondary">\n                                        {isPreview ? "\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430" : "\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430"}\n                                    </FooterButton>} />\n                        </SidePanelComponent.Footer>}\n                </SidePanelComponent>\n            </div>;\n})'}};let componentMeta={title:"Components/UniversalModal",id:"UniversalModal",tags:["stories-mdx"],includeStories:["universalModal"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:Component_stories_MDXContent};var Component_stories=componentMeta;let __namedExportsOrder=["Text","Content","SidePanelComponent","universalModal"]},"./packages/screenshot-utils/screenshots-story/utils.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{DO:function(){return isJsonObj},FX:function(){return stylesStringToObj},Ph:function(){return getQueryParam},Qh:function(){return parseKnobs}});var _home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),queryParams=__webpack_require__("./node_modules/querystring/index.js").parse(document.location.search),getQueryParam=function(param){var parse=arguments.length>1&&void 0!==arguments[1]&&arguments[1],value=queryParams[param];return parse?parseValue(value):value},parseKnobs=function(){return Object.entries(queryParams).reduce(function(acc,_ref){var _ref2=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__.Z)(_ref,2),k=_ref2[0],v=_ref2[1];return k.startsWith("knob-")&&(acc[k.replace("knob-","")]=parseValue(v)),acc},{})};function parseValue(value){if(value){if(["true","false"].includes(value))return"true"===value;if(!Number.isNaN(+value)&&!Number.isNaN(parseFloat(value)))return parseFloat(value);try{return JSON.parse(value)}catch(e){return value}}}function stylesStringToObj(){var str=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";if(!str)return{};var properties=str.split(";").map(function(v){return v.trim()}),obj={};return properties.forEach(function(property){var _property$split$map=property.split(":").map(function(v){return v.trim()}),_property$split$map2=(0,_home_runner_work_core_components_core_components_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_1__.Z)(_property$split$map,2),name=_property$split$map2[0],val=_property$split$map2[1];obj[name]=val}),obj}function isJsonObj(str){try{var ret=JSON.parse(str);return"object"==typeof ret}catch(e){return!1}}},"./node_modules/querystring/decode.js":function(module){function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}module.exports=function(qs,sep,eq,options){sep=sep||"&",eq=eq||"=";var obj={};if("string"!=typeof qs||0===qs.length)return obj;var regexp=/\+/g;qs=qs.split(sep);var maxKeys=1e3;options&&"number"==typeof options.maxKeys&&(maxKeys=options.maxKeys);var len=qs.length;maxKeys>0&&len>maxKeys&&(len=maxKeys);for(var i=0;i<len;++i){var kstr,vstr,k,v,x=qs[i].replace(regexp,"%20"),idx=x.indexOf(eq);idx>=0?(kstr=x.substr(0,idx),vstr=x.substr(idx+1)):(kstr=x,vstr=""),k=decodeURIComponent(kstr),v=decodeURIComponent(vstr),hasOwnProperty(obj,k)?Array.isArray(obj[k])?obj[k].push(v):obj[k]=[obj[k],v]:obj[k]=v}return obj}},"./node_modules/querystring/encode.js":function(module){var stringifyPrimitive=function(v){switch(typeof v){case"string":return v;case"boolean":return v?"true":"false";case"number":return isFinite(v)?v:"";default:return""}};module.exports=function(obj,sep,eq,name){return(sep=sep||"&",eq=eq||"=",null===obj&&(obj=void 0),"object"==typeof obj)?Object.keys(obj).map(function(k){var ks=encodeURIComponent(stringifyPrimitive(k))+eq;return Array.isArray(obj[k])?obj[k].map(function(v){return ks+encodeURIComponent(stringifyPrimitive(v))}).join(sep):ks+encodeURIComponent(stringifyPrimitive(obj[k]))}).join(sep):name?encodeURIComponent(stringifyPrimitive(name))+eq+encodeURIComponent(stringifyPrimitive(obj)):""}},"./node_modules/querystring/index.js":function(__unused_webpack_module,exports,__webpack_require__){exports.decode=exports.parse=__webpack_require__("./node_modules/querystring/decode.js"),exports.encode=exports.stringify=__webpack_require__("./node_modules/querystring/encode.js")}}]);